PROJECT_NAME=lesmots

###################
### ENVIRONMENT ###
###################
# Project environment, values can be "local" or "production"
ENV=local

# CI environment, values can be "develop", "staging" or "main" (or the name of a branch you want to deploy on)
CI_ENV=staging

# If you need a specific container for staging but not for production, you can change the PROJECT_ENV instead of the ENV
PROJECT_ENV=${ENV}

###################
### DOCKER ########
###################
# Docker Compose custom tools
COMPOSE_PROJECT_DEFAULT_DIR=containers
COMPOSE_PROJECT_ENV_DIR=${COMPOSE_PROJECT_DEFAULT_DIR}/${PROJECT_ENV}

# Aliases
CPD=${COMPOSE_PROJECT_DEFAULT_DIR}
CPE=${COMPOSE_PROJECT_ENV_DIR}

# Docker Compose variables
COMPOSE_PROJECT_NAME=${PROJECT_NAME}
COMPOSE_PROFILES=${PROJECT_ENV}
COMPOSE_PATH_SEPARATOR=;

# List files to start with
# You can add local/database.yml file if you need to run unit test on your machine with
# ${CPE}/database.yml
COMPOSE_FILES_BY_DEF=${CPD}/orchestrator.yml;${CPD}/api.yml;${CPD}/platform.yml;${CPD}/database.yml;${CPD}/database_administration.yml
COMPOSE_FILES_BY_ENV=${CPE}/orchestrator.yml;
COMPOSE_FILE=${COMPOSE_FILES_BY_DEF};${COMPOSE_FILES_BY_ENV}

# GLOBAL
DOMAIN=${PROJECT_NAME}.localhost
DEBUG=1
NODE_ENV=development
HTTP_PROTOCOL=http
APP_NAME=${PROJECT_NAME}

# DATABASE
DATABASE_NAME=
DATABASE_USER=
DATABASE_PASSWORD=
DATABASE_ROOT_PASSWORD=